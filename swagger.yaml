swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.1'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/User'
            example:
              status: 200
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: object
                    properties:
                      token:
                        type: string
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/UserProfile'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: [ ]
      tags:
        - Transaction Module
      summary: Transactions API
      description: API for fetching current month transactions list
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction list retrieved successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: object
                    properties:
                      transactions:
                        $ref: '#/definitions/TransactionsList'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: [ ]
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for creating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Transaction data
          required: true
          schema:
            $ref: '#/definitions/CreateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: User transaction upserted successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: [ ]
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for fetching transaction's details
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Transaction unique identifier
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    patch:
      security:
        - Bearer: [ ]
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for partially updating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Transaction unique identifier
          type: string
          required: true
        - in: body
          name: body
          description: Transaction data
          required: true
          schema:
            $ref: '#/definitions/TransactionDetails'
      produces:
        - application/json
      responses:
        '200':
          description: User transaction updated successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: [ ]
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for deleting a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          description: Transaction unique identifier
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transaction deleted successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ApiResponse:
    type: object
    description: Represent a normal call response
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
    required:
      - status
      - message
      - body
  Amount:
    type: object
    description: Represent a currency amount
    properties:
      currency:
        type: string
        description: Represent the amount's currency
      value:
        type: number
        description: Represent the amount's value
    required:
      - currency
      - value

  Login:
    type: object
    description: Represent the data for a user to log in
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
    required:
      - email
      - password
  UserProfile:
    type: object
    description: Represent the user's personal information
    properties:
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
    required:
      - firstName
      - lastName
  User:
    type: object
    description: Represent a user
    discriminator: id
    allOf:
      - type: object
        properties:
          id:
            type: string
            description: user unique identifier
          email:
            type: string
            description: user email address
          createdAt:
            type: string
            description: user creation date
          updatedAt:
            type: string
            description: user last update date
      - $ref: '#/definitions/UserProfile'
    required:
      - id
      - email
      - createdAt
      - updatedAt
      - firstName
      - lastName

  BankAccount:
    type: object
    description: Represent a user account
    discriminator: id
    properties:
      id:
        type: string
        description: User account's unique identifier
      type:
        type: string
        description: Account type
        enum:
          - checking
          - saving
          - card
      ref:
        type: string
        description: User account's reference code
      name:
        type: string
        description: User account's name
      amount:
        $ref: '#/definitions/Amount'
      description:
        type: string
        description: User account amount's description
    required:
      - id
      - type
      - ref
      - name
      - amount
      - description

  TransactionCategory:
    type: string
    description: Category of Transaction
    enum:
      - Food
      - Home
      - Health
  TransactionType:
    type: string
    description: Type of Transaction
    enum:
      - Electronic
  CreateTransaction:
    type: object
    description: Represent data sent when creating a new transaction
    properties:
      description:
        type: string
        description: Transaction label
      type:
        $ref: '#/definitions/TransactionType'
      sender:
        $ref: '#/definitions/BankAccount'
      receiver:
        $ref: '#/definitions/BankAccount'
      amount:
        $ref: '#/definitions/Amount'
    required:
      - description
      - type
      - sender
      - receiver
      - amount
  TransactionDetails:
    type: object
    description: Represent a transaction's user details
    properties:
      category:
        $ref: '#/definitions/TransactionCategory'
      notes:
        type: string
        description: Transaction's user notes
    minProperties: 1
  Transaction:
    type: object
    description: Represent a persisted transaction in database
    discriminator: id
    allOf:
      - type: object
        properties:
          id:
            type: string
            description: Unique transaction identifier
        required:
          - id
      - $ref: '#/definitions/CreateTransaction'
      - $ref: '#/definitions/TransactionDetails'
      - type: object
        properties:
          balance:
            $ref: '#/definitions/Amount'
          date:
            type: string
            format: date-time
            description: Transaction's date
        required:
          - balance
          - date
  TransactionsList:
    type: array
    description: Represent a list of Transaction
    items:
      $ref: '#/definitions/Transaction'
